package embedding.model;

import dev.langchain4j.data.embedding.Embedding;
import dev.langchain4j.model.embedding.AllMiniLmL6V2EmbeddingModel;
import dev.langchain4j.model.embedding.EmbeddingModel;
import dev.langchain4j.model.embedding.OnnxEmbeddingModel;
import dev.langchain4j.model.huggingface.HuggingFaceEmbeddingModel;
import dev.langchain4j.store.embedding.CosineSimilarity;

import java.io.IOException;

public class InProcessEmbeddingModelExamples {

    static class Pre_Packaged_In_Process_Embedding_Model_Example {

        public static void main(String[] args) throws IOException {

            String text = "Let's demonstrate that embedding can be done within a Java process and entirely offline.";

            // requires "langchain4j-embeddings-all-minilm-l6-v2" Maven/Gradle dependency, see pom.xml
            EmbeddingModel embeddingModel = new AllMiniLmL6V2EmbeddingModel();

            Embedding inProcessEmbedding = embeddingModel.embed(text).content();
            System.out.println(inProcessEmbedding);

//             Uncomment to compare with embedding generated by HuggingFace
             EmbeddingModel huggingFaceEmbeddingModel = HuggingFaceEmbeddingModel.builder()
                    .accessToken(System.getenv("HF_API_KEY"))
                    .modelId("sentence-transformers/all-MiniLM-L6-v2")
                    .build();

            Embedding huggingFaceEmbedding = huggingFaceEmbeddingModel.embed(text).content();

            System.out.println(CosineSimilarity.between(inProcessEmbedding, huggingFaceEmbedding));
            // 1.000000001963221 <- this indicates that the embedding created by the offline in-process all-MiniLM-L6-v2 model
            // is practically identical to that generated using the HuggingFace API.
        }
    }

    static class Custom_In_Process_Embedding_Model_Example {

        public static void main(String[] args) throws IOException {

            String text = "Let's demonstrate that embedding can be done within a Java process and entirely offline.";

            // requires "langchain4j-embeddings" Maven/Gradle dependency, see pom.xml
            EmbeddingModel embeddingModel = new OnnxEmbeddingModel("/home/me/model.onnx");

            Embedding inProcessEmbedding = embeddingModel.embed(text).content();
            System.out.println(inProcessEmbedding);
        }
    }
}
